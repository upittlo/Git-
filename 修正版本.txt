1. 修改曾經commit過版本

(A).
用reset

git reset HEAD~1

reset 後再去修改unstaged檔案即可

(B).

直接修改漏改的檔案

git add . 加入索引

git commit --amend  (重新commit最近一次版本)


2. rebase 重建基底

git rebase -i 'commit_id'
or
git rebase -i HEAD~10

commit_id選預修改版本之前一版做為基底

在編輯器內修改
pick >> 修改
edit >> stop commit,等待被修改沒做完的事情
若要刪除任一版本，直接刪掉就好

若用edit
之後不可用commit
要用 git commit --amend


3. rebase 衝突解決方法

### rebase 編輯時可以改變commit順序讓process更可讀
若發生衝突

先用git status看細節

並手動修改卡住部分

git add .
git rebase --continue

或放棄
git rebase --abort

4. 插入版本(全新commit)

git rebase -i commit_id
在要插入位置的版本將pick 改成edit
存檔 退出
修改檔案
git add .

git commit -m " "

git rebase --continue


5. 透過rebase合併歷史版本

git rebase -i commit_id

在需要合併的版本區 換上 squash (往前一個版本壓縮上去)
版本歷史紀錄會合併


6.修改歷史中某一版本並且加入變更

修改檔案
git add .
git commit --fixup=commit_id 

git rebase -i --autosquash 預修改版本之前的commit_id

(其餘rebase會自動幫忙完成)



